{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/admin/admin.component.css","webpack:///./src/app/components/admin/admin.component.html","webpack:///./src/app/components/admin/admin.component.ts","webpack:///./src/app/components/admin/users/get-user/get-user.component.css","webpack:///./src/app/components/admin/users/get-user/get-user.component.html","webpack:///./src/app/components/admin/users/get-user/get-user.component.ts","webpack:///./src/app/components/admin/users/update-user/update-user.component.css","webpack:///./src/app/components/admin/users/update-user/update-user.component.html","webpack:///./src/app/components/admin/users/update-user/update-user.component.ts","webpack:///./src/app/components/admin/users/users.component.css","webpack:///./src/app/components/admin/users/users.component.html","webpack:///./src/app/components/admin/users/users.component.ts","webpack:///./src/app/components/dashboard/dashboard.component.css","webpack:///./src/app/components/dashboard/dashboard.component.html","webpack:///./src/app/components/dashboard/dashboard.component.ts","webpack:///./src/app/components/home/home.component.css","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/login/login.component.css","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/navbar/navbar.component.css","webpack:///./src/app/components/navbar/navbar.component.html","webpack:///./src/app/components/navbar/navbar.component.ts","webpack:///./src/app/components/profile/profile.component.css","webpack:///./src/app/components/profile/profile.component.html","webpack:///./src/app/components/profile/profile.component.ts","webpack:///./src/app/components/profile/update/update.component.css","webpack:///./src/app/components/profile/update/update.component.html","webpack:///./src/app/components/profile/update/update.component.ts","webpack:///./src/app/components/register/register.component.css","webpack:///./src/app/components/register/register.component.html","webpack:///./src/app/components/register/register.component.ts","webpack:///./src/app/components/sidebar/sidebar.component.css","webpack:///./src/app/components/sidebar/sidebar.component.html","webpack:///./src/app/components/sidebar/sidebar.component.ts","webpack:///./src/app/components/subscriber/subscriber.component.css","webpack:///./src/app/components/subscriber/subscriber.component.html","webpack:///./src/app/components/subscriber/subscriber.component.ts","webpack:///./src/app/guards/admin.guard.ts","webpack:///./src/app/guards/auth.guard.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/users.service.ts","webpack:///./src/app/services/validate.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<app-navbar></app-navbar>\\n<div class=\\\"container mt-4\\\">\\n    <flash-messages></flash-messages>\\n</div>\\n<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from \"@angular/platform-browser\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { FlashMessagesModule } from \"angular2-flash-messages\";\n\n// SERVICES\nimport { ValidateService } from \"./services/validate.service\";\nimport { AuthService } from \"./services/auth.service\";\nimport { UsersService } from \"./services/users.service\";\n\n// GUARDS\nimport { AuthGuard } from \"./guards/auth.guard\";\nimport { AdminGuard } from \"./guards/admin.guard\";\n\n// COMPONENTS\nimport { AppComponent } from \"./app.component\";\nimport { NavbarComponent } from \"./components/navbar/navbar.component\";\nimport { LoginComponent } from \"./components/login/login.component\";\nimport { RegisterComponent } from \"./components/register/register.component\";\nimport { HomeComponent } from \"./components/home/home.component\";\nimport { DashboardComponent } from \"./components/dashboard/dashboard.component\";\nimport { ProfileComponent } from \"./components/profile/profile.component\";\nimport { AdminComponent } from \"./components/admin/admin.component\";\nimport { SubscriberComponent } from \"./components/subscriber/subscriber.component\";\nimport { UpdateComponent } from \"./components/profile/update/update.component\";\nimport { UsersComponent } from \"./components/admin/users/users.component\";\nimport { GetUserComponent } from \"./components/admin/users/get-user/get-user.component\";\nimport { UpdateUserComponent } from \"./components/admin/users/update-user/update-user.component\";\nimport { SidebarComponent } from \"./components/sidebar/sidebar.component\";\n\n// ROUTES\nconst appRoutes: Routes = [\n  { path: \"\", component: HomeComponent },\n  { path: \"register\", component: RegisterComponent },\n  { path: \"login\", component: LoginComponent },\n  {\n    path: \"dashboard\",\n    component: DashboardComponent,\n    canActivate: [AuthGuard]\n  },\n  { path: \"profile\", component: ProfileComponent, canActivate: [AuthGuard] },\n  {\n    path: \"profile/update/:id\",\n    component: UpdateComponent,\n    canActivate: [AuthGuard]\n  },\n  {\n    path: \"admin\",\n    component: AdminComponent,\n    canActivate: [AuthGuard, AdminGuard]\n  },\n  {\n    path: \"admin/users\",\n    component: UsersComponent,\n    canActivate: [AuthGuard, AdminGuard]\n  },\n  {\n    path: \"admin/users/get/:id\",\n    component: GetUserComponent,\n    canActivate: [AuthGuard, AdminGuard]\n  },\n  {\n    path: \"admin/users/update/:id\",\n    component: UpdateUserComponent,\n    canActivate: [AuthGuard, AdminGuard]\n  },\n  {\n    path: \"subscriber\",\n    component: SubscriberComponent,\n    canActivate: [AuthGuard]\n  },\n  { path: \"**\", component: HomeComponent }\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    LoginComponent,\n    RegisterComponent,\n    HomeComponent,\n    DashboardComponent,\n    ProfileComponent,\n    AdminComponent,\n    SubscriberComponent,\n    UpdateComponent,\n    UsersComponent,\n    GetUserComponent,\n    UpdateUserComponent,\n    SidebarComponent\n  ],\n  imports: [\n    BrowserModule,\n    RouterModule.forRoot(appRoutes),\n    HttpClientModule,\n    FormsModule,\n    FlashMessagesModule.forRoot()\n  ],\n  providers: [\n    ValidateService,\n    AuthService,\n    UsersService,\n    AuthGuard,\n    AdminGuard\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-4 mb-3\\\">\\n      <app-sidebar></app-sidebar>\\n    </div>\\n    <div class=\\\"col-md-8\\\">\\n      <div class=\\\"card shadow\\\">\\n        <div class=\\\"card-header text-capitalize\\\">\\n          Welcome to the admin page\\n        </div>\\n        <div class=\\\"card-body\\\">\\n          This page is only accessible by an admin\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-4 mb-3\\\">\\n      <app-sidebar></app-sidebar>\\n    </div>\\n    <div class=\\\"col-md-8\\\">\\n      <div class=\\\"card\\\" *ngIf=\\\"user\\\">\\n        <div class=\\\"card-header text-capitalize\\\">\\n          Your Profile\\n        </div>\\n        <div class=\\\"card-body\\\">\\n          <h3 class=\\\"text-capitalize\\\">{{user.name}}</h3>\\n          <p class=\\\"mb-0\\\">Email: {{user.email}}</p>\\n          <p class=\\\"mb-0\\\">Role: {{user.role}}</p>\\n          <hr>\\n          <a href=\\\"#\\\" routerLink=\\\"/admin/users\\\" class=\\\"btn btn-outline-success btn-sm mr-1\\\">back</a>\\n          <a href=\\\"#\\\" [routerLink]=\\\"['/admin/users/update/', user._id]\\\" class=\\\"btn btn-outline-warning btn-sm mr-1\\\">edit</a>\\n          <button (click)=\\\"onDelete()\\\" class=\\\"btn btn-outline-danger btn-sm mr-1\\\">delete</button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from \"@angular/core\";\nimport { UsersService } from \"../../../../services/users.service\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { FlashMessagesService } from \"angular2-flash-messages\";\n\n@Component({\n  selector: \"app-get-user\",\n  templateUrl: \"./get-user.component.html\",\n  styleUrls: [\"./get-user.component.css\"]\n})\nexport class GetUserComponent implements OnInit {\n  user;\n  currentUrl;\n\n  constructor(\n    private usersService: UsersService,\n    private activedRoute: ActivatedRoute,\n    private router: Router,\n    private flashMessages: FlashMessagesService\n  ) {}\n\n  onDelete() {\n    this.currentUrl = this.activedRoute.snapshot.params;\n    this.usersService.deleteUser(this.currentUrl.id).subscribe(userDetails => {\n      this.flashMessages.show(\"Successfully deleted user\", {\n        cssClass: \"alert-success\",\n        timeout: 5000\n      });\n      this.router.navigate([\"/admin/users\"]);\n    });\n  }\n\n  ngOnInit() {\n    this.currentUrl = this.activedRoute.snapshot.params;\n    this.usersService.getUser(this.currentUrl.id).subscribe(userDetails => {\n      this.user = (userDetails as any).user;\n    });\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-4 mb-3\\\">\\n      <app-sidebar></app-sidebar>\\n    </div>\\n    <div class=\\\"col-md-8\\\">\\n      <div class=\\\"card\\\" *ngIf=\\\"user\\\">\\n        <div class=\\\"card-header text-capitalize\\\">\\n          Edit user\\n        </div>\\n        <div class=\\\"card-body\\\">\\n          <form (ngSubmit)=\\\"onSubmit(f)\\\" #f=\\\"ngForm\\\">\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"\\\">Name</label>\\n              <input type=\\\"text\\\" name=\\\"name\\\" class=\\\"form-control\\\" placeholder=\\\"your name\\\" [(ngModel)]=\\\"user.name\\\" #updateName=\\\"ngModel\\\"\\n                required>\\n              <span *ngIf=\\\"updateName.errors?.required && updateName.touched\\\" class=\\\"small text-danger\\\">name is required</span>\\n            </div>\\n            <input [disabled]=\\\"!f.valid\\\" type=\\\"submit\\\" value=\\\"Update\\\" class=\\\"btn btn-outline-success btn-sm mr-1\\\">\\n            <a href=\\\"#\\\" [routerLink]=\\\"['/admin/users/get/', user._id]\\\" class=\\\"btn btn-outline-danger btn-sm\\\">Cancel</a>\\n          </form>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { UsersService } from \"../../../../services/users.service\";\nimport { FlashMessagesService } from \"angular2-flash-messages\";\n\n@Component({\n  selector: \"app-update-user\",\n  templateUrl: \"./update-user.component.html\",\n  styleUrls: [\"./update-user.component.css\"]\n})\nexport class UpdateUserComponent implements OnInit {\n  user;\n  currentUrl;\n\n  constructor(\n    private usersService: UsersService,\n    private activedRoute: ActivatedRoute,\n    private router: Router,\n    private flashMessages: FlashMessagesService\n  ) {}\n\n  onSubmit(f) {\n    this.usersService.updateUser(this.user).subscribe(data => {\n      this.flashMessages.show(\"Successfully updated user\", {\n        cssClass: \"alert-success\",\n        timeout: 5000\n      });\n      this.router.navigate([\"/admin/users\"]);\n    });\n  }\n\n  ngOnInit() {\n    this.currentUrl = this.activedRoute.snapshot.params;\n    this.usersService.getUser(this.currentUrl.id).subscribe(userDetails => {\n      this.user = (userDetails as any).user;\n    });\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-4 mb-3\\\">\\n      <app-sidebar></app-sidebar>\\n    </div>\\n    <div class=\\\"col-md-8\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-header text-capitalize\\\">\\n          Users\\n        </div>\\n        <div class=\\\"card-body\\\">\\n          <table class=\\\"table\\\">\\n            <thead>\\n              <tr>\\n                <th>Name</th>\\n                <th>Email</th>\\n                <th>Role</th>\\n                <th>Actions</th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              <tr *ngFor=\\\"let user of users\\\">\\n                <td>{{user.name}}</td>\\n                <td>{{user.email}}</td>\\n                <td>{{user.role}}</td>\\n                <td>\\n                  <a href=\\\"#\\\" [routerLink]=\\\"['/admin/users/get/', user._id]\\\" class=\\\"btn btn-outline-success btn-sm mr-1\\\">view</a>\\n                  <a href=\\\"#\\\" [routerLink]=\\\"['/admin/users/update/', user._id]\\\" class=\\\"btn btn-outline-warning btn-sm mr-1\\\">edit</a>\\n                </td>\\n              </tr>\\n            </tbody>\\n          </table>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from \"@angular/core\";\nimport { UsersService } from \"../../../services/users.service\";\n\n@Component({\n  selector: \"app-users\",\n  templateUrl: \"./users.component.html\",\n  styleUrls: [\"./users.component.css\"]\n})\nexport class UsersComponent implements OnInit {\n  users: object;\n\n  constructor(private usersService: UsersService) {}\n\n  ngOnInit() {\n    this.usersService.viewUsers().subscribe(userDetails => {\n      this.users = (userDetails as any).users;\n    });\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-4 mb-3\\\">\\n      <app-sidebar></app-sidebar>\\n    </div>\\n    <div class=\\\"col-md-8\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-header text-capitalize\\\">\\n          Welcome to the dashboard\\n        </div>\\n        <div class=\\\"card-body\\\">\\n          A Mean Stack Demo with:\\n          <ul class=\\\"\\\">\\n            <li>User Authentication using:</li>\\n            <ul>\\n              <li>Passport</li>\\n              <li>Passport JWT</li>\\n              <li>jsonwebtoken</li>\\n            </ul>\\n            <li>Route Guards</li>\\n            <ul>\\n              <li>Anuglar2-jwt</li>\\n            </ul>\\n            <li>Form validation</li>\\n            <ul>\\n              <li>Client</li>\\n              <li>Server</li>\\n            </ul>\\n          </ul>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"cover\\\">\\n  <div class=\\\"cover-text\\\">\\n    <h1 class=\\\"text-light display-1 mb-0\\\">Multiple User Role</h1>\\n    <p class=\\\"text-light display-4 mb-4 slabo\\\">A mean stack project with multiple user roles</p>\\n    <a href=\\\"#\\\" routerLink=\\\"/dashboard\\\" class=\\\"btn btn-outline-light btn-lg slabo\\\">Get started</a>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-6 col-md-8 mx-auto\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">\\n          Login\\n        </div>\\n        <div class=\\\"card-body\\\">\\n          <form (ngSubmit)=\\\"onSubmit(f)\\\" #f=\\\"ngForm\\\">\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"\\\">Email</label>\\n              <input type=\\\"text\\\" name=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"your email\\\" [(ngModel)]=\\\"email\\\" #loginEmail=\\\"ngModel\\\" required>\\n              <span *ngIf=\\\"loginEmail.errors?.required && loginEmail.touched\\\" class=\\\"small text-danger\\\">email is required</span>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"\\\">Password</label>\\n              <input type=\\\"password\\\" name=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"your password\\\" [(ngModel)]=\\\"password\\\" #loginPassword=\\\"ngModel\\\"\\n                required>\\n              <span *ngIf=\\\"loginPassword.errors?.required && loginPassword.touched\\\" class=\\\"small text-danger\\\">Password is required</span>\\n            </div>\\n            <input [disabled]=\\\"!f.valid\\\" type=\\\"submit\\\" value=\\\"Login\\\" class=\\\"btn btn-outline-success\\\">\\n          </form>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from \"@angular/core\";\nimport { ValidateService } from \"../../services/validate.service\";\nimport { AuthService } from \"../../services/auth.service\";\nimport { Router } from \"@angular/router\";\nimport { FlashMessagesService } from \"angular2-flash-messages\";\n\n@Component({\n  selector: \"app-login\",\n  templateUrl: \"./login.component.html\",\n  styleUrls: [\"./login.component.css\"]\n})\nexport class LoginComponent implements OnInit {\n  email: string;\n  password: string;\n\n  constructor(\n    private validateService: ValidateService,\n    private authService: AuthService,\n    public router: Router,\n    public flashMessagesService: FlashMessagesService\n  ) {}\n\n  ngOnInit() {}\n\n  onSubmit() {\n    const user = {\n      email: this.email,\n      password: this.password\n    };\n\n    // required fields\n    if (!this.validateService.validateLogin(user)) {\n      this.flashMessagesService.show(\"Please fill in all values\", {\n        cssClass: \"alert-danger\",\n        timeout: 5000\n      });\n      return false;\n    } else {\n      // validate email\n      if (!this.validateService.validateEmail(user.email)) {\n        this.flashMessagesService.show(\"Please provide a valid email\", {\n          cssClass: \"alert-danger\",\n          timeout: 5000\n        });\n        return false;\n      }\n      // Check Database\n      else {\n        this.authService.authenticateUser(user).subscribe(data => {\n          if ((data as any).success) {\n            this.authService.storeUserData(\n              (data as any).token,\n              (data as any).user\n            );\n            this.router.navigate([\"dashboard\"]);\n          }\n          // display error messages\n          else {\n            this.flashMessagesService.show((data as any).msg, {\n              cssClass: \"alert-danger\",\n              timout: 5000\n            });\n            this.router.navigate([\"login\"]);\n          }\n        });\n      }\n    }\n  }\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand-md navbar-light bg-light border-bottom\\\">\\n  <div class=\\\"container\\\">\\n    <a class=\\\"navbar-brand\\\" href=\\\"#\\\" routerLink=\\\"/\\\">Mean</a>\\n    <button class=\\\"navbar-toggler hidden-lg-up\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#collapsibleNavId\\\" aria-controls=\\\"collapsibleNavId\\\"\\n      aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"collapsibleNavId\\\">\\n      <ul class=\\\"navbar-nav\\\">\\n        <li class=\\\"nav-item\\\">\\n          <a [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\" class=\\\"nav-link\\\" href=\\\"#\\\" routerLink=\\\"/\\\">Home\\n          </a>\\n        </li>\\n      </ul>\\n      <ul *ngIf=\\\"!authService.isLoggedIn()\\\" class=\\\"navbar-nav ml-auto\\\">\\n        <li class=\\\"nav-item\\\">\\n          <a [routerLinkActive]=\\\"['active']\\\" class=\\\"nav-link\\\" href=\\\"#\\\" routerLink=\\\"/register\\\">Register</a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a [routerLinkActive]=\\\"['active']\\\" class=\\\"nav-link\\\" href=\\\"#\\\" routerLink=\\\"/login\\\">Login</a>\\n        </li>\\n      </ul>\\n      <ul *ngIf=\\\"authService.isLoggedIn()\\\" class=\\\"navbar-nav ml-auto\\\">\\n        <!-- <li *ngIf=\\\"authService.currentUser.role=='admin'\\\" class=\\\"nav-item\\\">\\n        <a [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\" class=\\\"nav-link text-capitalize\\\" href=\\\"#\\\" routerLink=\\\"/admin\\\">Admin</a>\\n      </li> -->\\n        <!-- <li *ngIf=\\\"authService.currentUser.role=='admin'\\\" class=\\\"nav-item\\\">\\n        <a [routerLinkActive]=\\\"['active']\\\" class=\\\"nav-link text-capitalize\\\" href=\\\"#\\\" routerLink=\\\"/admin/users\\\">Users</a>\\n      </li> -->\\n        <!-- <li class=\\\"nav-item\\\">\\n        <a [routerLinkActive]=\\\"['active']\\\" class=\\\"nav-link text-capitalize\\\" href=\\\"#\\\" routerLink=\\\"/subscriber\\\">Subscriber</a>\\n      </li> -->\\n        <!-- <li class=\\\"nav-item\\\">\\n        <a [routerLinkActive]=\\\"['active']\\\" class=\\\"nav-link\\\" href=\\\"#\\\" routerLink=\\\"/profile\\\">Profile</a>\\n      </li> -->\\n        <li class=\\\"nav-item dropdown\\\">\\n          <a class=\\\"nav-link dropdown-toggle text-capitalize\\\" href=\\\"#\\\" id=\\\"navbarDropdownMenuLink\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\"\\n            aria-expanded=\\\"false\\\">\\n            {{authService.currentUser.name}}\\n          </a>\\n          <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdownMenuLink\\\">\\n            <a class=\\\"dropdown-item\\\" href=\\\"#\\\" routerLink=\\\"/dashboard\\\">Dashboard</a>\\n            <a class=\\\"dropdown-item\\\" href=\\\"/\\\" (click)=\\\"onLogout()\\\">Logout</a>\\n          </div>\\n        </li>\\n      </ul>\\n    </div>\\n  </div>\\n</nav>\"","import { Component, OnInit } from \"@angular/core\";\nimport { AuthService } from \"../../services/auth.service\";\n\n@Component({\n  selector: \"app-navbar\",\n  templateUrl: \"./navbar.component.html\",\n  styleUrls: [\"./navbar.component.css\"]\n})\nexport class NavbarComponent implements OnInit {\n  user: object;\n  constructor(private authService: AuthService) {}\n\n  ngOnInit() {}\n\n  onLogout() {\n    this.authService.logout();\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-4 mb-3\\\">\\n      <app-sidebar></app-sidebar>\\n    </div>\\n    <div class=\\\"col-md-8\\\">\\n      <div class=\\\"card\\\" *ngIf=\\\"user\\\">\\n        <div class=\\\"card-header text-capitalize\\\">\\n          Your Profile\\n        </div>\\n        <div class=\\\"card-body\\\">\\n          <h3 class=\\\"text-capitalize\\\">{{user.name}}</h3>\\n          <p class=\\\"mb-0\\\">Email: {{user.email}}</p>\\n          <p class=\\\"mb-0\\\">Role: {{user.role}}</p>\\n          <hr>\\n          <a href=\\\"#\\\" [routerLink]=\\\"['/profile/update/', user._id]\\\" class=\\\"btn btn-outline-success btn-sm\\\">Edit</a>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from \"@angular/core\";\nimport { UsersService } from \"../../services/users.service\";\n\n@Component({\n  selector: \"app-profile\",\n  templateUrl: \"./profile.component.html\",\n  styleUrls: [\"./profile.component.css\"]\n})\nexport class ProfileComponent implements OnInit {\n  user: object;\n\n  constructor(private usersService: UsersService) {}\n\n  ngOnInit() {\n    this.usersService.viewUser().subscribe(userDetails => {\n      this.user = (userDetails as any).user;\n    });\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-4 mb-3\\\">\\n      <app-sidebar></app-sidebar>\\n    </div>\\n    <div class=\\\"col-md-8\\\">\\n      <div class=\\\"card\\\" *ngIf=\\\"user\\\">\\n        <div class=\\\"card-header text-capitalize\\\">\\n          Edit Profile\\n        </div>\\n        <div class=\\\"card-body\\\">\\n          <form (ngSubmit)=\\\"onSubmit(f)\\\" #f=\\\"ngForm\\\">\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"\\\">Name</label>\\n              <input type=\\\"text\\\" name=\\\"name\\\" class=\\\"form-control\\\" placeholder=\\\"your name\\\" [(ngModel)]=\\\"user.name\\\" #updateName=\\\"ngModel\\\"\\n                required>\\n              <span *ngIf=\\\"updateName.errors?.required && updateName.touched\\\" class=\\\"small text-danger\\\">name is required</span>\\n            </div>\\n            <input [disabled]=\\\"!f.valid\\\" type=\\\"submit\\\" value=\\\"Update\\\" class=\\\"btn btn-outline-success btn-sm mr-1\\\">\\n            <a href=\\\"#\\\" routerLink=\\\"/profile\\\" class=\\\"btn btn-outline-danger btn-sm\\\">Cancel</a>\\n          </form>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { UsersService } from \"../../../services/users.service\";\nimport { FlashMessagesService } from \"angular2-flash-messages\";\n\n@Component({\n  selector: \"app-update\",\n  templateUrl: \"./update.component.html\",\n  styleUrls: [\"./update.component.css\"]\n})\nexport class UpdateComponent implements OnInit {\n  user;\n\n  constructor(\n    private usersService: UsersService,\n    private router: Router,\n    private flashMessages: FlashMessagesService\n  ) {}\n\n  onSubmit(f) {\n    this.usersService.updateUser(this.user).subscribe(data => {\n      this.flashMessages.show(\"Successfully updated profile\", {\n        cssClass: \"alert-success\",\n        timeout: 5000\n      });\n      this.router.navigate([\"/profile\"]);\n    });\n  }\n\n  ngOnInit() {\n    this.usersService.viewUser().subscribe(userDetails => {\n      this.user = (userDetails as any).user;\n    });\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-6 col-md-8 mx-auto\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">\\n          Register\\n        </div>\\n        <div class=\\\"card-body\\\">\\n          <form (ngSubmit)=\\\"onSubmit(f)\\\" #f=\\\"ngForm\\\">\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"\\\">Name</label>\\n              <input type=\\\"text\\\" name=\\\"name\\\" class=\\\"form-control\\\" placeholder=\\\"your name\\\" [(ngModel)]=\\\"name\\\" #registerName=\\\"ngModel\\\" required>\\n              <span *ngIf=\\\"registerName.errors?.required && registerName.touched\\\" class=\\\"small text-danger\\\">name is required</span>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"\\\">Email</label>\\n              <input type=\\\"text\\\" name=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"your email\\\" [(ngModel)]=\\\"email\\\" #registerEmail=\\\"ngModel\\\"\\n                required>\\n              <span *ngIf=\\\"registerEmail.errors?.required && registerEmail.touched\\\" class=\\\"small text-danger\\\">email is required</span>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"\\\">Password</label>\\n              <input type=\\\"password\\\" name=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"your password\\\" [(ngModel)]=\\\"password\\\" #registerPassword=\\\"ngModel\\\"\\n                required>\\n              <span *ngIf=\\\"registerPassword.errors?.required && registerPassword.touched\\\" class=\\\"small text-danger\\\">Password is required</span>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"\\\">Confirm Password</label>\\n              <input type=\\\"password\\\" name=\\\"password2\\\" class=\\\"form-control\\\" placeholder=\\\"confirm your password\\\" [(ngModel)]=\\\"password2\\\"\\n                #registerPassword2=\\\"ngModel\\\" required>\\n              <span *ngIf=\\\"registerPassword2.errors?.required && registerPassword2.touched\\\" class=\\\"small text-danger\\\">confirm password is required</span>\\n            </div>\\n            <input [disabled]=\\\"!f.valid\\\" type=\\\"submit\\\" value=\\\"Register\\\" class=\\\"btn btn-outline-success\\\">\\n          </form>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from \"@angular/core\";\nimport { ValidateService } from \"../../services/validate.service\";\nimport { AuthService } from \"../../services/auth.service\";\nimport { FlashMessagesService } from \"angular2-flash-messages\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: \"app-register\",\n  templateUrl: \"./register.component.html\",\n  styleUrls: [\"./register.component.css\"]\n})\nexport class RegisterComponent implements OnInit {\n  name: string;\n  email: string;\n  password: string;\n  password2: string;\n\n  constructor(\n    private validateService: ValidateService,\n    private authService: AuthService,\n    public flashMessagesService: FlashMessagesService,\n    public router: Router\n  ) {}\n\n  ngOnInit() {}\n\n  onSubmit() {\n    const user = {\n      name: this.name,\n      email: this.email,\n      password: this.password,\n      password2: this.password2\n    };\n\n    // required fields\n    if (!this.validateService.validateRegister(user)) {\n      this.flashMessagesService.show(\"Please fill in all values\", {\n        cssClass: \"alert-danger\",\n        timeout: 5000\n      });\n      return false;\n    } else {\n      // validate email\n      if (!this.validateService.validateEmail(user.email)) {\n        this.flashMessagesService.show(\"Please provide a valid email\", {\n          cssClass: \"alert-danger\",\n          timeout: 5000\n        });\n        return false;\n      }\n      // confirm password\n      if (!this.validateService.validatePassword(user)) {\n        this.flashMessagesService.show(\"Confirm password did not match\", {\n          cssClass: \"alert-danger\",\n          timeout: 5000\n        });\n        return false;\n      }\n      // Register User\n      else {\n        this.authService.registerUser(user).subscribe(data => {\n          if ((data as any).success) {\n            console.log(\"you are now registered\");\n            this.flashMessagesService.show(\"You are now registered\", {\n              cssClass: \"alert-success\",\n              timeout: 5000\n            });\n            this.router.navigate([\"/login\"]);\n          } else {\n            this.flashMessagesService.show((data as any).msg, {\n              cssClass: \"alert-danger\",\n              timout: 4000\n            });\n            this.router.navigate([\"/register\"]);\n          }\n        });\n      }\n    }\n  }\n}\n","module.exports = \"\"","module.exports = \"<ul class=\\\"list-group\\\">\\n  <li class=\\\"list-group-item\\\">\\n    <a href=\\\"#\\\" class=\\\"text-dark\\\" routerLink=\\\"/dashboard\\\">Dashboard</a>\\n  </li>\\n  <li class=\\\"list-group-item\\\">\\n    <a href=\\\"#\\\" class=\\\"text-dark\\\" routerLink=\\\"/profile\\\">Profile</a>\\n  </li>\\n  <li *ngIf=\\\"authService.currentUser.role=='admin'\\\" class=\\\"list-group-item\\\">\\n    <a href=\\\"#\\\" class=\\\"text-dark\\\" routerLink=\\\"/admin/users\\\">Users</a>\\n  </li>\\n</ul>\"","import { Component, OnInit } from \"@angular/core\";\nimport { AuthService } from \"../../services/auth.service\";\n\n@Component({\n  selector: \"app-sidebar\",\n  templateUrl: \"./sidebar.component.html\",\n  styleUrls: [\"./sidebar.component.css\"]\n})\nexport class SidebarComponent implements OnInit {\n  constructor(private authService: AuthService) {}\n\n  ngOnInit() {}\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-8 mx-auto\\\">\\n      <div class=\\\"card shadow\\\">\\n        <div class=\\\"card-header text-capitalize\\\">\\n          Welcome to the and admin and subscriber page\\n        </div>\\n        <div class=\\\"card-body\\\">\\n          This page is accessible by the admin and subscriber\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-subscriber',\n  templateUrl: './subscriber.component.html',\n  styleUrls: ['./subscriber.component.css']\n})\nexport class SubscriberComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from \"@angular/core\";\nimport { Router, CanActivate } from \"@angular/router\";\nimport { AuthService } from \"../services/auth.service\";\nimport { FlashMessagesService } from \"angular2-flash-messages\";\n\n@Injectable()\nexport class AdminGuard implements CanActivate {\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private flashMessages: FlashMessagesService\n  ) {}\n\n  canActivate() {\n    if (this.authService.currentUser.role == \"admin\") {\n      return true;\n    } else {\n      this.flashMessages.show(\"You are not authorized to view that page\", {\n        cssClass: \"alert-danger\",\n        timeout: 5000\n      });\n      this.router.navigate([\"/dashboard\"]);\n      return false;\n    }\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { Router, CanActivate } from \"@angular/router\";\nimport { AuthService } from \"../services/auth.service\";\nimport { FlashMessagesService } from \"angular2-flash-messages\";\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private flashMessages: FlashMessagesService\n  ) {}\n\n  canActivate() {\n    if (this.authService.isLoggedIn()) {\n      return true;\n    } else {\n      this.flashMessages.show(\"Please sign-in\", {\n        cssClass: \"alert-danger\",\n        timeout: 5000\n      });\n      this.router.navigate([\"/login\"]);\n      return false;\n    }\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport \"rxjs/add/operator/map\";\nimport { tokenNotExpired, JwtHelper } from \"angular2-jwt\";\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AuthService {\n  authToken: any;\n  user: any;\n\n  constructor(private http: HttpClient) {}\n\n  // POST | api/users/register\n  // register user\n  registerUser(user) {\n    let headers = new HttpHeaders();\n    headers.append(\"Content-type\", \"applications/json\");\n    // return this.http.post(\"http://localhost:5000/api/auth/register\", user, {\n    return this.http.post(\"api/auth/register\", user, {\n      headers\n    });\n  }\n\n  // POST | api/users/login\n  // authenticate/login user\n  authenticateUser(user) {\n    let headers = new HttpHeaders();\n    headers.append(\"Content-type\", \"applications/json\");\n    // return this.http.post(\"http://localhost:5000/api/auth/login\", user, {\n    return this.http.post(\"api/auth/login\", user, {\n      headers\n    });\n  }\n\n  // store token and user data\n  storeUserData(token, user) {\n    localStorage.setItem(\"id_token\", token);\n    this.authToken = token;\n    this.user = user;\n  }\n\n  loadToken() {\n    const token = localStorage.getItem(\"id_token\");\n    this.authToken = token;\n  }\n\n  isLoggedIn() {\n    return tokenNotExpired(\"id_token\");\n  }\n\n  // use to check users name, id, and role; To hide show elements, and setup guard/middleware\n  get currentUser() {\n    this.loadToken();\n    if (!this.authToken) return null;\n    return new JwtHelper().decodeToken(this.authToken);\n  }\n\n  // signout\n  logout() {\n    this.authToken = null;\n    localStorage.clear();\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport \"rxjs/add/operator/map\";\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UsersService {\n  authToken: any;\n  user: any;\n\n  constructor(private http: HttpClient) {}\n\n  loadToken() {\n    const token = localStorage.getItem(\"id_token\");\n    this.authToken = token;\n  }\n\n  // CRUD USER\n\n  // GET | api/users/profile\n  // view current user for profile\n  viewUser() {\n    this.loadToken();\n    let headers = new HttpHeaders({\n      \"Content-Type\": \"application/json\",\n      Authorization: this.authToken\n    });\n    // return this.http.get(\"http://localhost:5000/api/users/profile\", {\n    return this.http.get(\"api/users/profile\", {\n      headers\n    });\n  }\n\n  // GET | api/users\n  // view users\n  viewUsers() {\n    this.loadToken();\n    let headers = new HttpHeaders({\n      \"Content-Type\": \"application/json\",\n      Authorization: this.authToken\n    });\n    // return this.http.get(\"http://localhost:5000/api/users\", {\n    return this.http.get(\"api/users\", {\n      headers\n    });\n  }\n\n  // GET | api/users/show/:id\n  // get a user\n  getUser(id) {\n    this.loadToken();\n    let headers = new HttpHeaders({\n      \"Content-Type\": \"application/json\",\n      Authorization: this.authToken\n    });\n    // return this.http.get(\"http://localhost:5000/api/users/show/\" + id, {\n    return this.http.get(\"api/users/show/\" + id, {\n      headers\n    });\n  }\n\n  // PUT | api/users/update (NEED TO REFACTOR THIS AGAIN)\n  // update user\n  updateUser(user) {\n    this.loadToken();\n    let headers = new HttpHeaders({\n      \"Content-Type\": \"application/json\",\n      Authorization: this.authToken\n    });\n    // return this.http.put(\"http://localhost:5000/api/users/update/\" + user.id, user, {\n    return this.http.put(\"api/users/update/\" + user.id, user, {\n      headers\n    });\n  }\n\n  // DELETE | api/users/delete/:id\n  // delete user\n  deleteUser(id) {\n    this.loadToken();\n    let headers = new HttpHeaders({\n      \"Content-Type\": \"application/json\",\n      Authorization: this.authToken\n    });\n    // return this.http.delete(\"http://localhost:5000/api/users/delete/\" + id, {\n    return this.http.delete(\"api/users/delete/\" + id, {\n      headers\n    });\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ValidateService {\n  constructor() {}\n\n  validateRegister(user) {\n    if (\n      user.name == undefined ||\n      user.email == undefined ||\n      user.password == undefined ||\n      user.password2 == undefined\n    ) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  validateLogin(user) {\n    if (user.email == undefined || user.password == undefined) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  validateEmail(email) {\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  }\n\n  validatePassword(user) {\n    if (user.password != user.password2) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}